#pragma once

class CSharedPtr
{
public:
	CSharedPtr();
	CSharedPtr(class CObject* Obj);
	CSharedPtr(const CSharedPtr& Ptr);
	CSharedPtr(CSharedPtr&& Ptr);
	~CSharedPtr();

public:
	void operator = (class CObject* Obj);
	void operator = (const CSharedPtr& Ptr);
	void operator = (CSharedPtr&& Ptr);

	bool operator == (class CObject* Obj)	const;
	bool operator == (const CSharedPtr& Ptr)	const;
	bool operator == (CSharedPtr&& Ptr)	const;

	bool operator != (class CObject* Obj)	const;
	bool operator != (const CSharedPtr& Ptr)	const;
	bool operator != (CSharedPtr&& Ptr)	const;

	class CObject* operator -> ()	const;
	operator class CObject* ()	const;

	class CObject* Get()	const;

private:
	class CObject* mObj = nullptr;
};

